<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
		"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--
XBL2 Table demo
Copyright 2007, Sean Hogan (http://www.meekostuff.net/)
All rights reserved
-->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Meeko XBL Table Demo</title>
  <style type="text/css">
html {
	border: none;
	background-color: #dddddd;
}
body { width: 480px; height: 100%; }
table {
	text-align: left;
	border-collapse: collapse;
	border: 1px solid gray;
	table-layout: auto;
	font-size: 80%;
	background-color: #ffffff;
}
caption {
	border: 1px solid gray;
}
tbody td {
	padding-left: 5px; padding-right: 5px;
	border: 1px solid gray;
}
thead th {
	min-width: 5ex; 
	padding: 0;
}
thead th button {
	width: 100%;
	padding-left: 1ex;
	padding-right: 10px;
	border: 1px outset #dddddd;
	background: #dddddd center right no-repeat;
	text-align: left;
	font-size: 80%;
}
thead th.sorted button {
	background-image: url(arrow-dn.gif);
}
thead th.reversed button {
	background-image: url(arrow-up.gif);
}
  </style>
  <xbl xmlns="http://www.w3.org/ns/xbl">
	<binding element="table">
	  <implementation>
<![CDATA[({
getColumns: function() {
	var element = this.boundElement;
	return element.tHead.rows[0].cells;
},
_sort: function(column, type, reverse) {
	var element = this.boundElement;
	var document = element.ownerDocument;
	forEach (element.tBodies, function(tBody) {
		var clone = tBody.cloneNode(true);
		var rows = [];
		var row;
		while (row = clone.firstChild) { // NOTE assumes tBody only contains rows
			clone.removeChild(row);
			if (Node.ELEMENT_NODE == row.nodeType) rows.push(row);
		}
		var values = [];
		for (var i=0, n=rows.length; i<n; i++) {
			var row = rows[i]; var cell = (row.cells && row.cells.length) ? row.cells[column] : row.getElementsByTagName("td")[column];
			var val = new String(cell.firstChild.nodeValue);
			val.rowIndex = i;
			values.push(val);
		}
		switch (type) {
			case "string":
				values = values.sort();
				break;
			case "number":
				values = values.sort(function(a, b) { return Number(a) - Number(b); });
				break;
			default:
				throw "Unrecognized sort type: " + type;
				break;
		}
		if (reverse) values = values.reverse();
		forEach (values, function(val) {
			clone.appendChild(rows[val.rowIndex]);
		});

		var parent = tBody.parentNode;
		var next = tBody.nextSibling;
		parent.removeChild(tBody);
		parent.insertBefore(clone, next);
	});
},
toggleColumnSortState: function(column) {
	var type = "string";
	var cols = this.getColumns();
	var col = cols[column];
	var classList = col.classList;
	if (classList.has("number")) type = "number";
	if (classList.has("string")) type = "string";
	var sortable = classList.has("sortable");
	var sorted = classList.has("sorted");
	var reversed = classList.has("reversed");
	if (!sortable) return;
	if (!sorted) {
		this._sort(column, type, false);
		classList.add("sorted");
		classList.remove("reversed");
	}
	else {
		this._sort(column, type, !reversed);
		if (reversed) classList.remove("reversed");
		else classList.add("reversed");
	}
	forEach (cols, function(col, i) {
		if (column != i) {
			var classList = col.classList;
			classList.remove("sorted");
			classList.remove("reversed");
		}
	});
}
})]]>
	  </implementation>
	</binding>
	
	<binding element="thead > tr > th > button">
		<handlers>
			<handler event="click" default-action="cancel">
var element = this.boundElement;
var cell = element.parentNode;
var row = cell.parentNode;
var tHead = row.parentNode;
var table = tHead.parentNode;
table.toggleColumnSortState(cell.cellIndex);
			</handler>
		</handlers>
	</binding>
  </xbl>
</head>
<body>
<table>
  <thead>
    <tr>
      <th class="string sortable"><button>Club</button></th>
      <th class="number"><button>P</button></th>
      <th class="number sortable"><button>W</button></th>
      <th class="number sortable"><button>L</button></th>
      <th class="number sortable"><button>D</button></th>
      <th class="number sortable"><button>F</button></th>
      <th class="number sortable"><button>A</button></th>
      <th class="number sortable"><button>%</button></th>
      <th class="number sortable sorted reversed"><button>Pts</button></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Geelong</td>
      <td>22</td>
      <td>18</td>
      <td>4</td>
      <td>0</td>
      <td>2542</td>
      <td>1664</td>
      <td>152.76</td>
      <td>72</td>
    </tr>
    <tr>
      <td>Port Adelaide</td>
      <td>22</td>
      <td>15</td>
      <td>7</td>
      <td>0</td>
      <td>2314</td>
      <td>2038</td>
      <td>113.54</td>
      <td>60</td>
    </tr>
    <tr>
      <td>West Coast</td>
      <td>22</td>
      <td>15</td>
      <td>7</td>
      <td>0</td>
      <td>2162</td>
      <td>1935</td>
      <td>111.73</td>
      <td>60</td>
    </tr>
    <tr>
      <td>Kangaroos</td>
      <td>22</td>
      <td>14</td>
      <td>8</td>
      <td>0</td>
      <td>2183</td>
      <td>1998</td>
      <td>109.26</td>
      <td>56</td>
    </tr>
    <tr>
      <td>Hawthorn</td>
      <td>22</td>
      <td>13</td>
      <td>9</td>
      <td>0</td>
      <td>2097</td>
      <td>1855</td>
      <td>113.05</td>
      <td>52</td>
    </tr>
    <tr>
      <td>Collingwood</td>
      <td>22</td>
      <td>13</td>
      <td>9</td>
      <td>0</td>
      <td>2011</td>
      <td>1992</td>
      <td>100.95</td>
      <td>52</td>
    </tr>
    <tr>
      <td>Sydney</td>
      <td>22</td>
      <td>12</td>
      <td>9</td>
      <td>1</td>
      <td>2031</td>
      <td>1698</td>
      <td>119.61</td>
      <td>50</td>
    </tr>
    <tr id='final-8'>
      <td>Adelaide</td>
      <td>22</td>
      <td>12</td>
      <td>10</td>
      <td>0</td>
      <td>1881</td>
      <td>1712</td>
      <td>109.87</td>
      <td>48</td>
    </tr>
    <tr>
      <td>St Kilda</td>
      <td>22</td>
      <td>11</td>
      <td>10</td>
      <td>1</td>
      <td>1874</td>
      <td>1941</td>
      <td>96.55</td>
      <td>46</td>
    </tr>
    <tr>
      <td>Brisbane Lions</td>
      <td>22</td>
      <td>9</td>
      <td>11</td>
      <td>2</td>
      <td>1986</td>
      <td>1885</td>
      <td>105.36</td>
      <td>40</td>
    </tr>
    <tr>
      <td>Fremantle</td>
      <td>22</td>
      <td>10</td>
      <td>12</td>
      <td>0</td>
      <td>2254</td>
      <td>2198</td>
      <td>102.55</td>
      <td>40</td>
    </tr>
    <tr>
      <td>Essendon</td>
      <td>22</td>
      <td>10</td>
      <td>12</td>
      <td>0</td>
      <td>2184</td>
      <td>2394</td>
      <td>91.23</td>
      <td>40</td>
    </tr>
    <tr>
      <td>Western Bulldogs</td>
      <td>22</td>
      <td>9</td>
      <td>12</td>
      <td>1</td>
      <td>2111</td>
      <td>2469</td>
      <td>85.50</td>
      <td>38</td>
    </tr>
    <tr>
      <td>Melbourne</td>
      <td>22</td>
      <td>5</td>
      <td>17</td>
      <td>0</td>
      <td>1890</td>
      <td>2418</td>
      <td>78.16</td>
      <td>20</td>
    </tr>
    <tr>
      <td>Carlton</td>
      <td>22</td>
      <td>4</td>
      <td>18</td>
      <td>0</td>
      <td>2167</td>
      <td>2911</td>
      <td>74.44</td>
      <td>16</td>
    </tr>
    <tr>
      <td>Richmond</td>
      <td>22</td>
      <td>3</td>
      <td>18</td>
      <td>1</td>
      <td>1958</td>
      <td>2537</td>
      <td>77.18</td>
      <td>14</td>
    </tr>
  </tbody>
</table>
</body>
</html>
